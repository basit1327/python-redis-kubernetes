# This defination will create following resources for redis
# 1) Deployment which will ensure atleast 1 redis instance is available
# 2) Service for communaction b/w redis pod, service server as static entry point to be use with in our python counter application.

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
      - name: redis-pv-storage
        persistentVolumeClaim:
          claimName: redis-pv-claim    
      containers:
      - image: redis
        imagePullPolicy: Always
        name: redis
        volumeMounts:
          - mountPath: "/redis-master-data"
            name: redis-pv-storage        
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-11-05T13:53:25Z"
  labels:
    app: redis-svc
  name: redis-svc
  namespace: default
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis
  type: ClusterIP